<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hrim.Event.Analytics.Api</name>
    </assembly>
    <members>
        <member name="T:Hrim.Event.Analytics.Api.Extensions.MiddlewareExtensions">
            <summary> </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.Extensions.MiddlewareExtensions.UseCorrelationId(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Register <see cref="T:Hrim.Event.Analytics.Api.Middleware.CorrelationMiddleware"/> so correlation id header will be processed
            </summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.Extensions.MvcBuilderExtensions">
            <summary> </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.Extensions.MvcBuilderExtensions.AddHrimsoftJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary> Set json serialization settings </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.Middleware.CorrelationMiddleware">
            <summary>
            Adds/takes correlation id to/from headers and create a logging scope with that id. 
            </summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.ModelBinders.JsonModelBinder`1">
            <summary>
            As json deserialization is not used with a query string, this model binder enforce json deserialization. 
            </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.ModelBinders.JsonModelBinder`1.#ctor(Microsoft.Extensions.Logging.ILogger{Hrim.Event.Analytics.Api.ModelBinders.JsonModelBinder{`0}})">
            <summary> </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.ModelBinders.JsonModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Hrim.Event.Analytics.Api.Services.JsonSettingsFactory">
            <summary>
            A single point to get a Json serializer settings
            </summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Controllers.EntityController">
            <summary> Manage any entity type </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EntityController.#ctor(Hrim.Event.Analytics.Api.Services.IApiRequestAccessor,MediatR.IMediator)">
            <summary> </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EntityController.RestoreAsync(Hrim.Event.Analytics.Api.V1.Models.EntityRequest,System.Threading.CancellationToken)">
            <summary> Restore a soft deleted instance of any entity</summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EntityController.SoftDeleteAsync(Hrim.Event.Analytics.Api.V1.Models.EntityRequest,System.Threading.CancellationToken)">
            <summary> Soft-delete an instance of any entity</summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Controllers.EventAnalyticsApiController">
            <summary>
            Base controller for all event analytics api controllers
            </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventAnalyticsApiController.ProcessCreateResult``1(Hrim.Event.Analytics.Abstractions.Cqrs.CqrsResult{``0})">
            <summary> Process CQRS result for create endpoints </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventAnalyticsApiController.ProcessUpdateResult``1(Hrim.Event.Analytics.Abstractions.Cqrs.CqrsResult{``0})">
            <summary> Process CQRS result for update endpoints </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventAnalyticsApiController.ProcessGetByIdResult``1(``0)">
            <summary> Process Get endpoint results </summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Controllers.EventController">
            <summary>
            Manage user event types with this crud controller
            </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.#ctor(Hrim.Event.Analytics.Api.Services.IApiRequestAccessor,MediatR.IMediator)">
            <summary> </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.GetUserEventsAsync(System.DateOnly,System.DateOnly,System.Guid,System.Threading.CancellationToken)">
            <summary> Get user's events for a period </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.CreateOccurrenceAsync(Hrim.Event.Analytics.Abstractions.Entities.Events.OccurrenceEvent,System.Threading.CancellationToken)">
            <summary> Create an occurrence event </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.UpdateOccurrenceAsync(Hrim.Event.Analytics.Abstractions.Entities.Events.OccurrenceEvent,System.Threading.CancellationToken)">
            <summary> Update a duration event </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.CreateDurationAsync(Hrim.Event.Analytics.Abstractions.Entities.Events.DurationEvent,System.Threading.CancellationToken)">
            <summary> Create a duration event </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.UpdateDurationAsync(Hrim.Event.Analytics.Abstractions.Entities.Events.DurationEvent,System.Threading.CancellationToken)">
            <summary> Update a duration event </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventController.GetByIdAsync(System.Guid,Hrim.Event.Analytics.Abstractions.Enums.EntityType,System.Threading.CancellationToken)">
            <summary> Get user event type by id </summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Controllers.EventTypeController">
            <summary>
            Manage user event types with this crud controller
            </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventTypeController.#ctor(Hrim.Event.Analytics.Api.Services.IApiRequestAccessor,MediatR.IMediator)">
            <summary> </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventTypeController.GetAllAsync(System.Threading.CancellationToken)">
            <summary> Get all user event types </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventTypeController.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary> Get user event type by id </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventTypeController.CreateAsync(Hrim.Event.Analytics.Abstractions.Entities.EventTypes.UserEventType,System.Threading.CancellationToken)">
            <summary> Create a new event type </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Controllers.EventTypeController.UpdateAsync(Hrim.Event.Analytics.Abstractions.Entities.EventTypes.UserEventType,System.Threading.CancellationToken)">
            <summary> Update an event type </summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Models.EventRequest">
            <summary> Get all events for a period </summary>
            <param name="Start">Includes durations that intersects start border </param>
            <param name="End">Includes durations that intersects end border </param>
            <param name="OwnerId">Returns only those events that were created by this user id</param>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Models.EventRequest.#ctor(System.DateOnly,System.DateOnly,System.Guid)">
            <summary> Get all events for a period </summary>
            <param name="Start">Includes durations that intersects start border </param>
            <param name="End">Includes durations that intersects end border </param>
            <param name="OwnerId">Returns only those events that were created by this user id</param>
        </member>
        <member name="P:Hrim.Event.Analytics.Api.V1.Models.EventRequest.Start">
            <summary>Includes durations that intersects start border </summary>
        </member>
        <member name="P:Hrim.Event.Analytics.Api.V1.Models.EventRequest.End">
            <summary>Includes durations that intersects end border </summary>
        </member>
        <member name="P:Hrim.Event.Analytics.Api.V1.Models.EventRequest.OwnerId">
            <summary>Returns only those events that were created by this user id</summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Models.EventResponse">
            <summary> Response for a period request </summary>
            <param name="Request">A request for with this response</param>
            <param name="Occurrences">occurrence events that satisfy a request</param>
            <param name="Durations">duration events that satisfy a request</param>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Models.EventResponse.#ctor(Hrim.Event.Analytics.Api.V1.Models.EventRequest,System.Collections.Generic.IList{Hrim.Event.Analytics.Abstractions.ViewModels.Events.ViewOccurrenceEvent},System.Collections.Generic.IList{Hrim.Event.Analytics.Abstractions.ViewModels.Events.ViewDurationEvent})">
            <summary> Response for a period request </summary>
            <param name="Request">A request for with this response</param>
            <param name="Occurrences">occurrence events that satisfy a request</param>
            <param name="Durations">duration events that satisfy a request</param>
        </member>
        <member name="P:Hrim.Event.Analytics.Api.V1.Models.EventResponse.Request">
            <summary>A request for with this response</summary>
        </member>
        <member name="P:Hrim.Event.Analytics.Api.V1.Models.EventResponse.Occurrences">
            <summary>occurrence events that satisfy a request</summary>
        </member>
        <member name="P:Hrim.Event.Analytics.Api.V1.Models.EventResponse.Durations">
            <summary>duration events that satisfy a request</summary>
        </member>
        <member name="T:Hrim.Event.Analytics.Api.V1.Validators.EntityRequestValidator">
            <summary>
            Validates requests for entity controller
            </summary>
        </member>
        <member name="M:Hrim.Event.Analytics.Api.V1.Validators.EntityRequestValidator.#ctor">
            <summary> </summary>
        </member>
    </members>
</doc>
