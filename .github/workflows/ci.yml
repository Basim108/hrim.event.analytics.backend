name: "CI"

on: [push]

jobs:
    build:
        runs-on: ubuntu-latest
        name: 'Build'
        steps:
            - name: 'Checkout'
              uses: actions/checkout@v2
            - name: 'Install dotnet'
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: '7.0.x'
            - name: 'Restore packages'
              run: dotnet restore ${{ env.PROJECT_PATH }}
            - name: 'Build project'
              run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
    
    test:
        runs-on: ubuntu-latest
        name: 'Tests'
        steps:
            - name: 'Checkout'
              uses: actions/checkout@v2
            - name: 'Install dotnet'
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: '7.0.x'
            - name: 'Unit tests'
              run: dotnet test ${{ env.TESTS_PROJECT_PATH }} --configuration Release
        needs: build
    
    sonarlint:
        name: SonarLint
        runs-on: windows-latest
        needs: [build, test]
        steps:
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 1.11
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~\sonar\cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar

            - name: Cache SonarCloud scanner
              id: cache-sonar-scanner
              uses: actions/cache@v1
              with:
                  path: .\.sonar\scanner
                  key: ${{ runner.os }}-sonar-scanner
                  restore-keys: ${{ runner.os }}-sonar-scanner

            - name: Install SonarCloud scanner
              if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
              shell: powershell
              run: |
                  New-Item -Path .\.sonar\scanner -ItemType Directory
                  dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner 

            - name: Install dotnet-coverage
              shell: powershell
              run: dotnet tool install --global dotnet-coverage

            - name: Build and analyze
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              shell: powershell
              run: |
                  .\.sonar\scanner\dotnet-sonarscanner begin /k:"Basim108_hrim.event.analytics.backend" /o:"hrimsoft" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
                  dotnet build --no-incremental
                  dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
                  .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"